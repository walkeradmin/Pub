[SQL]
order_all = select 
	卡单原因,
	订单组号,
	货主名称,
	仓库名称,
	单据类型,
	节点类型,
	订单日期,
	物流中心
	from 
	(select case when a.implinform is null then b.reason
	else
	(case when b.reason is null then a.implinform
	else
	(a.implinform || b.reason)
	end)end 卡单原因,
	               nvl(a.billoid, '~') 订单组号,
	               nvl(c.custname, '~') 货主名称,
	               nvl(storh.warename, '~') 仓库名称,
	               nvl(doc.name, '~') 单据类型,
	               '委托入库' 节点类型,
	               nvl(a.creationtime, '~') 订单日期,
	               nvl(cen.custname, '~') 物流中心
	from sbill_entrin_h a
	left join sbill_entrin_b b
	on a.pk_entrustin = b.pk_entrustin
	left join sbase_owner_h c
	on a.pk_owner = c.pk_owner_h
	left join sbase_storage_h storh
	on storh.pk_storage_h = a.storage
	left join bd_defdoc doc
	on doc.pk_defdoc = a.pk_operationtype
	left join sbase_center_h cen
	on cen.pk_center_h = storh.pk_custdoc
	where a.billstatus = '1001A11000000001WAC3'
	and a.creationtime > '{}'
	and a.pk_source <> all('1001A11000000000NFTP', '1001A11000000000NFTN')
	and a.dr = 0) RKKD
	where RKKD.卡单原因 is not null
	union
	SELECT 卡单原因,
	       订单组号,
	       货主名称,
	       仓库名称,
	       单据类型,
	       节点类型,
	       订单日期,
	       物流中心
	FROM (SELECT DISTINCT CASE WHEN d.implinform IS NULL THEN e.reason
	ELSE (CASE WHEN e.reason IS NULL THEN d.implinform
	ELSE(d.implinform || e.reason)END)
	END 卡单原因,
	nvl(d.orderoid, '~') 订单组号,
	nvl(h.custname, '~') 货主名称,
	nvl(i.warename, '~') 仓库名称,
	nvl(k.name, '~') 单据类型,
	'委托出库' 节点类型,
	nvl(d.maketime, '~') 订单日期,
	nvl(cen.custname, '~') 物流中心
	FROM sbill_entrout_h d
	LEFT JOIN sbill_entrout_b e
	ON d.pk_ownerout_h = e.pk_ownerout_h
	LEFT JOIN sbase_owner_h h
	ON h.pk_owner_h = d.ownerid
	LEFT join sbase_storage_h i
	on i.pk_storage_h = d.storage
	LEFT JOIN bd_defdoc k
	on k.pk_defdoc = d.pk_operationtype
	LEFT JOIN sbase_center_h cen
	on cen.pk_center_h = i.pk_custdoc
	WHERE d.orderstatus = '1001A11000000001WAC3' --卡单
	AND d.maketime > '{}'
	AND d.pk_outmode <> '1001A31000000006AICN' --非只运
	AND d.pk_source <> all('1001A11000000000NFTP', '1001A11000000000NFTN') --非模板导入、手工填写
	AND d.dr = 0) CHKD
	WHERE chkd.卡单原因 IS NOT NULL
	union
	select nvl(adj.def1, '~') 卡单原因,
	       nvl(adj.billno, '~') 订单组号,
	       nvl(ow.custname, '~') 货主名称,
	       nvl(adj.mdmcust_name, '~') 仓库名称,
	       '调整单' 单据类型,
	       '物流调整' 节点类型,
	       nvl(adj.creationtime, '~') 订单日期,
	       nvl(cen.custname, '~') 物流中心
	from sic_adjustment_h adj
	inner join sbase_owner_h ow
	on ow.pk_owner_h = adj.pk_owner
	inner join sbase_storage_h stor
	on stor.pk_storage_h = adj.pk_mdmcustdoc
	inner join sbase_center_h cen
	on cen.pk_center_h = stor.pk_custdoc
	where adj.ts > '{}'
	and adj.vbillstatus in('-1','3')
	and adj.dr = 0
	and adj.def3 <> '关闭'
	ORDER BY 货主名称
	
order_ma = SELECT *
	FROM (
	SELECT 
	nvl(d.def31, '~') 接口状态,
	nvl(d.belongno, '~') 拣货单号,
	nvl(h.custname, '~') 货主名称,
	nvl(i.warename, '~') 仓库名称,
	nvl(k.name, '~') 单据类型,
	'物流出库' 节点类型,
	nvl(d.maketime, '~') 订单日期,
	nvl(cen.custname, '~') 物流中心
	FROM sbill_out_h d
	LEFT JOIN sbill_entrout_h oub
	ON oub.orderoid = d.def6
	LEFT JOIN sbase_owner_h h
	ON h.pk_owner_h = d.pk_owner
	LEFT join sbase_storage_h i
	on i.pk_storage_h = d.pk_storage
	LEFT JOIN bd_defdoc k
	on k.pk_defdoc = oub.pk_operationtype
	LEFT JOIN sbase_center_h cen
	on cen.pk_center_h = i.pk_custdoc
	WHERE d.orderstatus = '1001A110000000019DPB'
	AND d.maketime > '{}'
	AND d.def31 = '接口表反馈:网络或MA服务异常，发送失败！') CHKD
	WHERE CHKD.接口状态 IS NOT NULL
	ORDER BY 货主名称
	
sql1 = select 
	ow.custname 货主名称, 
	a.orderoid 订单组号
	from sbill_entrout_h a
	left join sbase_owner_h ow
	on ow.pk_owner_h = a.ownerid
	where a.ownerid in
	(select 
	b.pk_owner_h 
	from sbase_owner_h b 
	where b.custcode = '351')
	and a.MAKETIME > '{}'
	
sql2 = select distinct 
	ow.custname 货主名称,
	a.orderoid 订单组号,
	nvl(substr(fee.filepath, instr(fee.filepath, '/', 1, 9) + 1), '~') 反馈文件
	from sbill_entrout_h a
	left join sbase_owner_h ow
	on ow.pk_owner_h = a.ownerid
	left join sbill_out_h ouh
	on ouh.def6 = a.orderoid
	left join save_feedback fee
	on fee.billno = ouh.belongno
	where a.ownerid in
	(select 
	b.pk_owner_h 
	from sbase_owner_h b 
	where b.custcode = '351')
	and a.MAKETIME > '{}'
	and a.orderstatus = '1001ZZ1000000001CHDE'
	
sql3 = select 
	ow.custname 货主名称, 
	enin.billoid 订单组号
	from sbill_entrin_h enin
	left join sbase_owner_h ow
	on ow.pk_owner_h = enin.pk_owner
	where enin.pk_owner in
	(select 
	b.pk_owner_h 
	from sbase_owner_h b 
	where b.custcode = '351')
	and enin.creationtime > '{}'
	
sql4 = select distinct 
	ow.custname 货主名称,
	inh.def6 订单组号,
	nvl(substr(fee.filepath, instr(fee.filepath, '/', 1, 9) + 1), '~') 反馈文件
	from sbill_in_h inh
	left join sbase_owner_h ow
	on ow.pk_owner_h = inh.pk_owner
	left join save_feedback fee
	on fee.billno = inh.belongno
	where inh.pk_owner in
	(select 
	b.pk_owner_h 
	from sbase_owner_h b 
	where b.custcode = '351')
	and inh.creationtime > '{}'
	and inh.billstatus = '1001ZZ1000000001CHDE'
	
sql_sh = select count(*)
	from sbill_out_h h
	where pk_owner in
	(select pk_owner_h
	from sbase_owner_h c
	where c.custcode in ('56', '58', '65', '85', '211', '229', '228', '230'))
	and maketime > '{}'
	and PK_STORAGE in 
	(select PK_STORAGE_H
	from SBASE_STORAGE_H
	where WARECODE in ('SH1','SH2','SH3','SH4','SH5','SH6','SH7','SH9','SHB'))
	
sql_sn = select count(*)
	from sbill_out_h h
	where maketime > '{}'
	and PK_STORAGE in
	(select PK_STORAGE_H
	from SBASE_STORAGE_H
	where WARECODE in ('N00', 'N01', 'S00', 'S01', 'W00'))
	
db_link = declare begin save.p_save_erp_check_order; end;
sql_erp = select 'ERP',sum(case type when 1 then 1 else 0 end) 入库总数,
	sum(case type when 1 then dtlcount else 0 end) 入库明细总数,
	sum(case type when 2 then 1 else 0 end) 出库总数,
	sum(case type when 2 then dtlcount else 0 end) 出库明细总数 
	from save.p_save_erp_check_order_t a union all select '平台',
	sum(case when type=1 and a.billno is not null then 1 else 0 end) 入库总数,
	sum(case  when type=1 and a.billno is not null then dtlcount_pt else 0 end) 入库明细总数,
	sum(case  when type=2 and a.billno is not null then 1 else 0 end) 出库总数,
	sum(case  when type=2 and a.billno is not null then dtlcount_pt else 0 end) 出库明细总数 
	from save.p_save_erp_check_order_t a 
	
sql_feed = select billno
	from save_feedbackqueue qe
	where qe.owner = '115'
	and qe.ts > to_char(sysdate - 5, 'yyyy-mm-dd hh24:mi:ss')
	and qe.billtype not in ('T500', 'T340')
	

[Group]
dic = {'国药控股福建有限公司': ['0', '1', '1', '国控福建WMS/TMS上线群'], '国药控股扬州有限公司': ['0', '1', '1', '国控江苏SAVE-TMS-WMS'], '国药控股广东物流有限公司': ['0', '1', '1', '天天查单（广深'], '国药控股常州有限公司': ['0', '1', '1', '国药常州WMS项目组'], '国药控股四川医药股份有限公司': ['0', '1', '1', '国控四川系统沟通群'], '国药控股云南有限公司': ['0', '1', '1', '云南TMS-SAVE-WMS运维'], '国药物流有限责任公司': ['0', '1', '1', '国药物流SAVE+WMS+TMS交流'], '国药控股温州有限公司': ['0', '1', '1', '国控温州SAVE-WMS运维群'], '国药控股宁夏有限公司': ['0', '1', '1', '国控宁夏SAVE-WMS'], '国药控股营口有限公司': ['0', '1', '1', '国控沈阳SAVE_WMS'], '国药控股福州有限公司': ['0', '1', '1', '福州CMS-SAVE-WMS-TMS群'], '国药控股朝阳有限公司': ['0', '1', '1', '国控沈阳SAVE_WMS'], '国药控股山东有限公司': ['0', '1', '1', '国控山东SAVE_TMS_WMS'], '国药控股海南有限公司': ['0', '1', '1', '国控海南SAVE_TMS_WMS'], '国药控股湖南有限公司': ['0', '1', '1', '国控湖南SAVE-TMS-WMS'], '国药控股广西物流有限公司': ['0', '0', '0', '国控广西SAVE_TMS_WMS'], '国药控股苏州有限公司': ['0', '1', '1', '国控江苏SAVE-TMS-WMS'], '国药控股天津物流有限公司': ['0', '1', '1', '国控天津、物流、平台'], '国药控股南通有限公司': ['0', '1', '1', '国控南通SAVE_WMS运维'], '国药控股泰州物流中心': ['0', '1', '1', '国控江苏SAVE-TMS-WMS'], '国药控股湖北有限公司': ['0', '1', '1', '国控湖北物流信息系统'], '国药乐仁堂医药有限公司': ['0', '1', '1', '乐仁堂SAVE/WMS/TMS运维'], '国药集团西南医药有限公司': ['0', '1', '1', '国药西南SAVE/TMS项目群'], '国药控股山西有限公司': ['0', '1', '1', '山西单据信息交流'], '国药控股北京华鸿有限公司': ['0', '1', '1', '国控华鸿SAVE-TMS项目'], '国药控股朝阳医疗器械有限公司': ['0', '1', '1', '国控沈阳SAVE_WMS'], '国药控股河南股份有限公司': ['0', '1', '1', '河南TMS-SAVE-WMS运维'], '国药控股沈阳有限公司': ['0', '1', '1', '国控沈阳SAVE_WMS'], '国药集团新疆新特药业有限公司': ['0', '1', '1', '国药新疆信息系统运维'], '苏州恒鼎物流有限公司': ['0', '1', '1', '恒鼎软件项目群'], '国药控股陕西有限公司': ['0', '1', '1', '国控陕西信息群'], '国药控股鲁南有限公司': ['0', '1', '1', '国控鲁南SAVE/TMS项目群'], '国药控股安徽有限公司': ['0', '1', '1', '安徽SAVE/WMS/TMS运维'], '国药控股烟台有限公司': ['0', '1', '1', '国控烟台WMS实施项目'], '国药控股江苏有限公司': ['0', '1', '1', '国控江苏SAVE-TMS-WMS'], '国药集团新疆新特克拉玛依药业有限公司': ['0', '1', '1', '国药新疆信息系统运维'], '国药控股吉林有限公司': ['0', '1', '1', '吉林赛飞、TMS交流群']}

[Statistics]
葵花药业集团医药有限公司 = 葵花接口
gywl = 国药物流SAVE+WMS+TMS交流

[Method]
dic1 = {'网络或MA服务异常': '根据提供的“拣货单号”，在赛飞 “物流单”节点，点击 “下发wms” 重推单据至wms即可', '库存量不足': '请先核对CMS、SAVE、WMS库存的 “数量” “状态” 以及 “库存供应商” 三个维度是否一致！', '送货地址不允许为空': '\n对于送货方式为“送货”类型的订单必须要传入地址信息，因为TMS和WMS均需要该类信息才能正确地将订单送到客户手中。该类卡单处理有两种：\n（1）货主取消订单重新下新的订单\n（2）修改单据为自提后再保存提交单据（若单据需要进入TMS不可这么操作）', '批号不允许为空': '\n赛飞在接收非只运输的出库订单后会进行批号和库存的校验工作。\n当出现该类卡单提示时，绝大部分原因是货主发了错误的批号给到平台，平台校验失败了。\n请货主方一定要仔细核对入库批号信息哦~ ', '字段运输地址编码转换失败': '\n（1）因为地址基础资料未下发导致的卡单，在开飞平台‘货主客商’节点，根据卡单提示的编码查看该客商下是否有对应的值信息，如果没有请货主下发对应地址基础资料信息。\n（2）货主下发地址基础档案后，请在赛飞平台‘货主客商’节点查看地址是否收到哈。\n（3）若收到，请在委托单界面，点击‘修改’按钮填选对应地址信息后，点击‘提交’按钮后就能正常下发wms。', '字段交易包装单位转换失败': '\n（1）请到‘货主货品’节点查询该订单明细商品的‘出货包装单位’和‘交易包装单位’是否为空，若为空值，请到‘货主档案’节点下查询‘货品单位对码’信息中是否有‘顶’该对码值\n（2）若没有该对码，请填写OA通知赛飞运维组、WMS运维组、TMS运维组（若该货主不实用tms则忽略）相关同事新增单位对码，待新增过后需货主重新维护商品上出货包装单位和交易包装单位字段并下发赛飞。查看商品上单位是否收到，若收到，请取消单据重新更换单号下发单据就完成啦~（注意一下哈：已下发的单据且在赛飞已生成的订单，货主方重新下发单据，赛飞订单是不会做任何更新的）', '并发操作,请重新提交': '\n（1）请到 “委托单节点” 点击 “刷新”按钮\n（2）刷新后，请点击 “提交” 按钮即可，收到下发成功提示，则表明单据已生成物流单下发wms'}

[Name]
上海save运维主管 = 平台-刘慧
me = shy

[Timer]
alltime = 60
khtime = 60
erptime = 60
hrtime = 3600
checktime = 60
cleantime = 7200

[Clock]
clock_erp = 20:30:00
clock_kh = ['11:30:00', '16:00:00']
clock_order = ['08:00:00', '21:00:00']

